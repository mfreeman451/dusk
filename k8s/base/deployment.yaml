apiVersion: apps/v1
kind: Deployment
metadata:
  name: dusk-node
  namespace: dusk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dusk-node
  template:
    metadata:
      labels:
        app: dusk-node
    spec:
      imagePullSecrets:
        - name: ghcr-io-cred
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      initContainers:
        - name: init-state
          image: ghcr.io/mfreeman451/dusk-node:v0.0.14
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p /opt/dusk/rusk/state
              mkdir -p /opt/dusk/rusk/keys
              mkdir -p /opt/dusk/rusk/circuits
              touch /opt/dusk/rusk/state/genesis.state
              chown -R 1000:1000 /opt/dusk
          volumeMounts:
            - name: dusk-data
              mountPath: /opt/dusk
      containers:
        - name: dusk-node
          image: ghcr.io/mfreeman451/dusk-node:v0.0.17
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
              name: api
            - containerPort: 9000
              protocol: UDP
              name: p2p
          volumeMounts:
            - name: dusk-data
              mountPath: /opt/dusk
            - name: dusk-wallet
              mountPath: /home/dusk/.dusk
          env:
            - name: LOG_LEVEL
              value: "debug"
            - name: RUST_BACKTRACE
              value: "1"
            - name: HOME
              value: "/home/dusk"
          resources:
            requests:
              cpu: "2"
              memory: "4Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
      volumes:
        - name: dusk-data
          persistentVolumeClaim:
            claimName: dusk-data
        - name: dusk-wallet
          persistentVolumeClaim:
            claimName: dusk-wallet